plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'jacoco'
    id 'org.sonarqube'
}

sonar {
    properties {
        // Insert other SonarQube properties here
        property 'sonar.sources', "./src/main"
        property 'sonar.host.url', 'https://sonarcloud.io/'
        property 'sonar.organization', 'suhal-kumar-manchala'
        property 'sonar.projectKey', 'suhal-kumar-manchala_gradle-rsl'
        property 'sonar.coverage.jacoco.xmlReportPaths', "$projectDir.parentFile.path/build/reports/jacoco/codeCoverageReport/codeCoverageReport.xml"
    }
}

android {
    compileSdk 33

    defaultConfig {
        minSdk 21
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    dataBinding{
        enabled=true
    }
}

dependencies {

    implementation project(":common:common_utils")
    implementation project(":countries:domain")

    implementation Deps.core
    implementation Deps.appCompat
    implementation Deps.androidMaterial
    implementation Deps.constraintLayout
    testImplementation TestImplementation.junit
    androidTestImplementation AndroidTestImplementation.junit
    androidTestImplementation AndroidTestImplementation.espresso


    implementation DaggerHilt.hilt
    kapt DaggerHilt.hiltAndroidCompiler
    kapt DaggerHilt.hiltCompiler

    implementation(Coroutines.coroutineCore)
    implementation(Coroutines.coroutineAndroid)
    implementation(CoroutinesLifecycleScope.lifecycleViewModel)
    implementation(CoroutinesLifecycleScope.lifeCycleRuntime)

    implementation(Glide.glide)
    kapt(Glide.annotationProcessor)

    implementation (ViewModelDelegate.viewModelDeligate)
    implementation(CircularProgressBar.swipeRefresh)
}